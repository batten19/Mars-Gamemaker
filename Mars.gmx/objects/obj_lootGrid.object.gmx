<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise variables and randomise grid values (May need to be moved to globals)
numberOfColumns = 10;
numberOfRows = 5;
global.numberOfAllowedSearches = 3;
global.numberOfSearches = 0;

///Randomise seed (Disable for debugging)
randomize();

///Create loot grid
var i = 0;
var j = 0;
lootGrid = ds_grid_create(numberOfColumns, numberOfRows);
while(i &lt; numberOfColumns)
{
    while(j &lt; numberOfRows)
        {
        ds_grid_add(lootGrid, i, j, irandom(10));
        j++;
        }
    i++;
    j=0;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>search = keyboard_check_released(ord('E'));
nomWidth = (room_width / numberOfColumns);
nomHeight = (room_width / numberOfRows);

if (search &amp;&amp; (global.numberOfSearches &lt; global.numberOfAllowedSearches))
{
    roverx = floor((obj_rover.x) / nomWidth);
    rovery = floor((obj_rover.y) / nomHeight);
    global.lootRoll = string(ds_grid_get(lootGrid, roverx, rovery));
    instance_create(100, 100, obj_lootResult);
    // Reset value in current cell
    ds_grid_set(lootGrid, roverx, rovery, 0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Grid
columnWidth = room_width / numberOfColumns;
columnHeight = room_height / numberOfRows;
i=1;

while(i &lt; numberOfColumns)
{
    draw_line(columnWidth * i, 0, columnWidth * i, room_height);
    draw_line(0, columnHeight * i, room_width, columnHeight * i);
    i ++;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*

///Search event
search = obj_rover.searchKey;
nomWidth = (room_width / numberOfColumns);
nomHeight = (room_width / numberOfRows);

if (search &amp;&amp; (numberOfSearches &lt; numberOfAllowedSearches))
{
    roverx = floor((obj_rover.x) / nomWidth);
    rovery = floor((obj_rover.y) / nomHeight);
    draw_text(obj_rover.x, obj_rover.y, "You discovered " + string(ds_grid_get(lootGrid, roverx, rovery)) + " science points");  
    numberOfSearches ++;
}

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
